(load "stdlib.kek")

//// CONSTANTS

(def {e} 2.7182818284)
(def {pi} 3.1415926535)

//// VECTORS

(func {vec_add a b} {
	if (or (== a null) (== b null)) {
		null
	} {
		join
			(list
				(+ (eval (head a)) (eval (head b)))
			)
			(vadd_b (tail a) (tail b))
	}
})

(func {vec_sub a b} {
	list
		(- (fst a) (fst b))
		(- (snd a) (snd b))
		(- (trd a) (trd b))
})

(func {scal_prod a b} {
	+
		(* (fst a) (fst b))
		(* (snd a) (snd b))
		(* (trd a) (trd b))
})

(func {scal_mul a b} {
	list
		(* a (fst b))
		(* a (snd b))
		(* a (trd b))
})

(func {vec_abs a} {
	sqrt (
		+
			(^ (fst a))
			(^ (snd a))
			(^ (trd a))
	)
})

(func {vec_prod a b} {
	if(or (!= 3 (len a)) (!= 3 (len b))) {
		error "Cross product only applicable on 3-dimensional vectors!"
	} {
		list
			(- (* (snd a) (trd b)) (* (trd a) (snd b)))
			(- (* (trd a) (fst b)) (* (fst a) (trd b)))
			(- (* (fst a) (snd b)) (* (snd a) (fst b)))
	}
})

//// Stochastics

(func {fact a} {
	if(< a 0) {
		error "Can't calculate the factorial of negative or non integer numbers!"
	} {
		if(== a 0) {
			1
		} {
			* a (fact (- a 1))
		}
	}
})

(func {bin_coefficient a b} {
	/ (fact a) (* (fact b) (fact (- a b))) 
})

(func {combinations a b} {
	bin_coefficient a b
})

(func {permutations a b} {
	/ (fact a) (fact (- a b))
})

(func {expectancy x p} {
	if(or (== x null) (== p null)) {
		0
	} {
		+
			(* (eval (head x)) (eval (head p)))
			(expectancy (tail x) (tail p))
	}
})

(func {variance x p} {
	do
		(= {variance_calc} (\ {x p e} {
			if (or (== x null) (== p null)) {
				0
			} {
				+ 
					(* (^ (- (eval (head x)) e) 2) 
						(eval (head p))
					) 
					(variance_calc (tail x) (tail p) e)
			}
		}))
		(variance_calc x p (expectancy x p))
})